# Scenario 8

#!/bin/bash   // called bang which indicate that we have to write script ,if anything comes after it doesnot interrupt//
recycle_bin="$HOME/.recycle_bin"    // this command tells us about the location of recycle bin//
rm="/bin/rm -r "  // So /bin/rm -r remove file with name filename from your system silently.//
copy="/bin/cp -r "  // Copying a directory, first to a new, and then to an existing destination directory//
if [ $# -eq 0 ] ; then  // # Must have command-line args to demo script//

echo "ERROR: Please enter the file path to delete." >&2; exit 1; // this command takes an argument with path file you want to delete
fi
flags=""
while  getopts   "dfiPRrvW"   args; do
case $args in
f ) exec $rm "$@" ;;  # exec lets us exit this script directly.
* ) flags="$flags -$args" ;;  # other flags are for 'rm', not us
esac
done
shift $(( $OPTIND - 1 ))
if [ ! -d $recycle_bin ] ; then
mkdir $recycle_bin
fi
for arg; do
newname="$recycle_bin/$(date "+%S.%M.%H.%d.%m").$(basename "$arg")"
if [ -f "$arg" ] ; then
$copy "$arg" "$newname"
elif [ -d "$arg" ] ; then
$copy "$arg" "$newname"
fi
done
exec $rm $flags "$@"
exit 0



# Scenario 10

In .baschrc file write :

function rmfile()
{
	a=$@
	rm $@
	echo “$(date)  deleted->  $(realpath $a)” >> /home/shashwat/myLogs/delete.logs        //created log file previously
}

In terminal instread of rm command use rmfile:
rmfile f1.txt f2.txt      etc.


# Scenario 11


# taking bash as default bin
#!/bin/bash

# providing path for files to be traversed
FILES=/home/neha/myfile/DevAuto/*
# start for loop
for f in $FILES
do
	# take action on each file. $f store current file name
  echo "Processing $f"
 	#wide spaced line
  echo -en '\n'  
	# count of lines and the characters
  wc $f
  echo -en '\n'
	#to get the owner of the file
  #ls -l $f
  stat -c "%U" $($f)
	# counter to indicate the line numbers of the file
  cat -n $f
  echo -en '\n'
  echo -en '\n'
  echo -en '\n'
done




# Scenario 12


#!/bin/bash
	read -p "enter the password: " password
	read -p "enter the file to be encrypted: " fname
	name=$(find /home/ajay/ -name $fname)
	if [ -f "$name" ]
	then
	 echo "$name"
	 gpg -c --batch --passphrase $password $name
	 rm $name
	fi
	if [ -d "$name" ]
	then
	 for f in "$name"/*;
	 do
	   gpg -c --batch --passphrase $password $f
	   rm $f
	 done
	fi




# Scenario 13


#!/bin/bash
	read -p "enter the password: " password
	read -p "enter the file to be encrypted: " fname
	name=$(find /home/ajay/ -name $fname)
	if [ -f "$name" ]
	then
	 if [ ${name: -4} == ".gpg" ]
	  then
	   filename="${name%.*}"
	   result=$(gpg -d --batch --passphrase $password $name)
	   echo "$result">>$filename
	   rm $name
	  fi
	fi
	if [ -d "$name" ]
	then
	 for f in "$name"/*;
	 do
	  if [ ${f: -4} == ".gpg" ]
	  then
	   filename="${f%.*}"
	   result=$(gpg -d --batch --passphrase $password $f)
	   echo "$result">>$filename
	   rm $f
	  fi
	 done
	fi




# Scenario 14


Use the following commands in Linux terminal and show its usage

MODULE CONSIST OF:
1.DATE
2.W
3.LAST
4.DF
5.FREE
6.TOP
7.NETSTAT
8.SS




# Scenario 15

#!/bin/bash
downloads_directory="$HOME/Downloads"
if [ -z "$1" ]; then
echo "ERROR: Download List file is not specified in the arguments" >&2;
exit 1;
fi
if ! [ -z "$2" ]; then
downloads_directory=$2
fi
if [ ! -d $downloads_directory ] ; then
mkdir -p $downloads_directory
fi
download_list=$1
cat $download_list | while read url; do
echo "-------------------------------------------------------------------"
echo "$url"
wget -P $downloads_directory $url
done
exit 0




# Scenario 17

#!/bin/bash

if[ $( ifconfig | grep -o $1 ) == $1 ]
then 
ifconfig $1 | sed 3,8d | sed 1d
echo " Public IP: "
curl --interface $1 http://ifconfig.co

else
echo "NIC does not exist"
exit 125
fi